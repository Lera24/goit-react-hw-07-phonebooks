{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","redux/contacts-fetch.js","components/ContactList/ContactList.container.js","components/ContactForm/ContactForm.js","redux/contacts-action.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","map","contact","className","css","item","name","number","type","button","onClick","id","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContacts","mutation","url","method","invalidatesTags","createContact","body","filterContacts","value","useFetchContactsQuery","useDeleteContactsMutation","useCreateContactMutation","useFilterContactsQuery","connect","state","filter","allContacts","skip","data","isFetching","isError","title","valueState","queries","fetchName","Object","keys","result","useState","setName","setNumber","inputNameId","shortid","generate","inputTelId","findCurrentValue","e","target","onSubmit","preventDefault","find","alert","wrap","htmlFor","input","onChange","pattern","required","filterItem","createAction","dispatch","onFilter","actions","inputFilterId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducerFilter","createReducer","_","payload","contactsReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311ff5ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ContactForm_wrap__36VmF\",\"input\":\"ContactForm_input__1_3kH\",\"button\":\"ContactForm_button__RYFFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__Dyolb\"};","import PropTypes from \"prop-types\";\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts &&\n        contacts.map((contact) => {\n          return (\n            <li key={contact.id} className={css.item}>\n              <span className={css.name}>{`${contact.name}:`}</span>\n              <span className={css.number}>{contact.number}</span>\n              <button\n                type=\"submit\"\n                className={css.button}\n                onClick={() => onDeleteContact(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://6166d25413aa1d00170a67d3.mockapi.io/\",\n  }),\n  tagTypes: [\"contacts\"],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => `contacts/`,\n      providesTags: [\"contacts\"],\n    }),\n    deleteContacts: builder.mutation({\n      query: (id) => ({\n        url: `contacts/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"contacts\"],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: `contacts/`,\n        method: \"POST\",\n        body: {\n          name,\n          number,\n        },\n      }),\n      invalidatesTags: [\"contacts\"],\n    }),\n    filterContacts: builder.query({\n      query: (value) => `contacts/?filter=${value}`,\n      providesTags: [\"contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useCreateContactMutation,\n  useFilterContactsQuery,\n} = contactsApi;\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport css from \"./ContactList.module.css\";\nimport { ContactList } from \"./ContactList\";\nimport {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useFilterContactsQuery,\n} from \"../../redux/contacts-fetch\";\n\nfunction ContactListContainer({ filter }) {\n  const allContacts = useFetchContactsQuery();\n  const filterContacts = useFilterContactsQuery(filter, {\n    skip: filter === \"\",\n  });\n  const [deleteContacts] = useDeleteContactsMutation();\n  const { data, isFetching, isError } = filter ? filterContacts : allContacts;\n\n  return (\n    <>\n      {isFetching && <h3 className={css.title}>Please wait...</h3>}\n      {isError && (\n        <h3 className={css.title}>\n          Sorry, there are unexpected error. Please try again\n        </h3>\n      )}\n      {data && !isFetching && !isError && (\n        <ContactList contacts={data} onDeleteContact={deleteContacts} />\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(ContactListContainer);\n\nContactListContainer.propTypes = {\n  filter: PropTypes.string,\n};\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport css from \"./ContactForm.module.css\";\nimport { useCreateContactMutation } from \"../../redux/contacts-fetch\";\n\nfunction ContactForm({ contacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [createContact] = useCreateContactMutation();\n\n  const inputNameId = shortid.generate();\n  const inputTelId = shortid.generate();\n\n  const findCurrentValue = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    contacts && contacts.find((contact) => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : createContact({ name, number });\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={addContact} className={css.wrap}>\n      <label htmlFor={inputNameId}>\n        Name\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={inputNameId}\n        />\n      </label>\n      <label htmlFor={inputTelId}>\n        Number\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={inputTelId}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const valueState = state.contactsApi.queries;\n  const fetchName = Object.keys(valueState);\n  const result =\n    state.contacts.filter === \"\"\n      ? valueState[`${fetchName[0]}`]\n      : valueState[`${fetchName[1]}`];\n\n  return {\n    contacts: result ? result.data : [],\n  };\n};\n\nexport default connect(mapStateToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst filterItem = createAction(\"items/Filter\");\n\nexport default { filterItem };\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/contacts-action\";\nimport css from \"./Filter.module.css\";\n\nfunction Filter({ filter, onFilter }) {\n  const inputFilterId = shortid.generate();\n\n  return (\n    <label htmlFor={inputFilterId}>\n      Find contacts by name\n      <input\n        className={css.input}\n        onChange={onFilter}\n        type=\"text\"\n        value={filter}\n        id={inputFilterId}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilter: (e) => dispatch(actions.filterItem(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import ContactListContainer from \"./components/ContactList/ContactList.container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"wrap\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactListContainer />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-action\";\nimport { contactsApi } from \"./contacts-fetch\";\n\nconst reducerFilter = createReducer(\"\", {\n  [actions.filterItem]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  filter: reducerFilter,\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n////import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3TPy0\",\"name\":\"ContactList_name__2tDkb\",\"number\":\"ContactList_number__3aODX\",\"button\":\"ContactList_button__3xvjg\",\"title\":\"ContactList_title__23TFR\"};"],"sourceRoot":""}